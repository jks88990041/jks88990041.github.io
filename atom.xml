<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只柴犬</title>
  
  <subtitle>一只柴犬</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-09T06:35:26.234Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>凯凯超人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC(1)</title>
    <link href="http://yoursite.com/2020/07/09/JDBC(1)/"/>
    <id>http://yoursite.com/2020/07/09/JDBC(1)/</id>
    <published>2020-07-09T06:35:19.074Z</published>
    <updated>2020-07-09T06:35:26.234Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="JDBC">TOC</a></p><h1 id="JDBC概述"><a href="#JDBC概述" class="headerlink" title="JDBC概述"></a>JDBC概述</h1><h2 id="JDBC是神马"><a href="#JDBC是神马" class="headerlink" title="JDBC是神马"></a>JDBC是神马</h2><p>JDBC（Java DataBase Connectivity）就是<strong>Java数据库连接</strong>，说白了就是用Java语言来操作数据库。原来操作数据库是在控制台使用SQL语句来操作数据库，而JDBC是用Java语言向数据库发送SQL语句。</p><h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>遵循了JDBC规范的，可以访问自己数据库的API被称之为驱动。</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200709105133961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2prczg4OTk1NjU2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>JDBC是接口，而JDBC驱动才是接口的实现，没有驱动无法完成数据库连接！每个数据库厂商都有自己的驱动，用来连接自己公司的数据库。</p><h1 id="JDBC接口、类介绍"><a href="#JDBC接口、类介绍" class="headerlink" title="JDBC接口、类介绍"></a>JDBC接口、类介绍</h1><h2 id="JDBC中的主要类（接口）"><a href="#JDBC中的主要类（接口）" class="headerlink" title="JDBC中的主要类（接口）"></a>JDBC中的主要类（接口）</h2><p>在JDBC中常用的类有：</p><ul><li>DriverManager – 类，用来获取Connection；今后只需要会用DriverManager的getConnection()方法</li><li>Connection – 接口；</li></ul><blockquote><p>Connection最为重要的方法就是获取Statement：<br>Statement stmt = con.createStatement(); </p></blockquote><p>后面在学习ResultSet方法时，还要学习一下下面的方法：<br>Statement stmt = con.createStatement(int,int);</p><ul><li>Statement – 接口；</li></ul><blockquote><p>Statement最为重要的方法是：<br>int executeUpdate(String sql)：执行更新操作，即执行insert、update、delete语句，其实这个方法也可以执行create table、alter table，以及drop table等语句，但我们很少会使用JDBC来执行这些语句；<br>ResultSet executeQuery(String sql)：执行查询操作，执行查询操作会返回ResultSet，即结果集。</p></blockquote><ul><li>ResultSet – 接口  用于查询；可以通过next()方法使ResultSet的游标向下移动</li></ul><h2 id="如何写一个JDBC-连接数据库呢？"><a href="#如何写一个JDBC-连接数据库呢？" class="headerlink" title="如何写一个JDBC 连接数据库呢？"></a>如何写一个JDBC 连接数据库呢？</h2><p>具体的步骤出查询外有一些区别，大体上的过程如下所示：</p><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200709143302435.png#pic_center" alt="在这里插入图片描述"></p><p>首先，访问的数据库与执行访问程序的一定不是一台电脑。所以连接一个服务器数据库需要的东西包括：（用java表达的话）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> String username = <span class="string">"root"</span>;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">final</span> String password = <span class="string">"root"</span>;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">final</span> String url = <span class="string">"jdbc:mysql://127.0.0.1:3306/jdbcdemo"</span>;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">final</span> String driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br></pre></td></tr></table></figure><p>而要访问一个数据表，并进行CRUD其实是使用JDBC+SQL语句的方式</p><h3 id="数据表添加记录"><a href="#数据表添加记录" class="headerlink" title="数据表添加记录"></a>数据表添加记录</h3><p>首先先定义一条添加记录的SQL语句如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql = "<span class="keyword">insert</span> <span class="keyword">into</span> person(p_id,<span class="keyword">name</span>,addr,birth) <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'志玲'</span>,<span class="string">'日本'</span>,<span class="string">'1998-7-1'</span>)<span class="string">";</span></span><br></pre></td></tr></table></figure><p>再设定初始外部的接口Connection与Statement为NULL</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">Statement statement = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p>而后分别是 驱动加载、建立连接、获取执行SQL对象、执行SQL。但途中可能需要抛出SQL异常等进行捕获。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//驱动加载</span></span><br><span class="line">Class.forName(driver);</span><br><span class="line"><span class="comment">//建立连接</span></span><br><span class="line">DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">//获得一个执行sql的对象</span></span><br><span class="line">statement = conn.createStatement();</span><br><span class="line"><span class="comment">//执行sql</span></span><br><span class="line">statement.executeUpdate(sql);</span><br></pre></td></tr></table></figure><p>最后将原来访问的接口，关闭即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (statement != <span class="keyword">null</span>) </span><br><span class="line">statement.close();</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>)</span><br><span class="line">conn.close();</span><br></pre></td></tr></table></figure><p>详细的具体代码可以看如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String sql = <span class="string">"insert into person(p_id,name,addr,birth) values(null,'志玲','日本','1998-7-1')"</span>;</span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    Statement statement = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//驱动加载</span></span><br><span class="line">        Class.forName(driver);</span><br><span class="line">        <span class="comment">//建立连接</span></span><br><span class="line">        DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//获得一个执行sql的对象</span></span><br><span class="line">        statement = conn.createStatement();</span><br><span class="line">        <span class="comment">//执行sql</span></span><br><span class="line">        statement.executeUpdate(sql);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (statement != <span class="keyword">null</span>)</span><br><span class="line">                statement.close();</span><br><span class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) </span><br><span class="line">                conn.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据表修改记录"><a href="#数据表修改记录" class="headerlink" title="数据表修改记录"></a>数据表修改记录</h3><p>与插入记录步骤相同，仅仅改变SQL语句即可。如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"update person p set p.ADDR = '日本', p.BIRTH = '1977-12-31' where p.P_ID = 2"</span>;</span><br></pre></td></tr></table></figure><h3 id="数据表删除记录"><a href="#数据表删除记录" class="headerlink" title="数据表删除记录"></a>数据表删除记录</h3><p>与插入记录步骤相同，仅仅改变SQL语句即可。如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"delete from person where p_id = 3"</span>;</span><br></pre></td></tr></table></figure><h3 id="数据表查询记录"><a href="#数据表查询记录" class="headerlink" title="数据表查询记录"></a>数据表查询记录</h3><p>访问服务器、驱动加载、建立连接、获取执行SQL对象步骤都一致，但由于查询需要获得列表数据，所以执行得返回果集。<strong>所以执行SQL使用的方法不同</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//驱动的加载</span></span><br><span class="line">Class.forName(driver);</span><br><span class="line"><span class="comment">//建立连接</span></span><br><span class="line">conn = DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">//获得一个执行SQL的对象</span></span><br><span class="line">stmt = conn.createStatement();</span><br><span class="line"><span class="comment">//执行sql</span></span><br><span class="line">rs = stmt.executeQuery(sql);</span><br></pre></td></tr></table></figure><p>stmt.executeQuery(sql)得到的对象，是一组列表对象。可以通过next()方法使ResultSet的游标向下移动，当游标移动到你需要的行时，就需要来获取该行的数据了。next()方法在碰到有数据记录时会返回true，并会循环直到找不到数据记录而返回false为止。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line"><span class="comment">//获得列数据 标明列数或者列名均可以 实际为方法的两种重载</span></span><br><span class="line"><span class="keyword">int</span> pId = rs.getInt(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//int pId = rs.getInt("p_id");</span></span><br><span class="line">String pname = rs.getString(<span class="number">2</span>);</span><br><span class="line">String addr = rs.getString(<span class="number">3</span>);</span><br><span class="line">Date birth = rs.getDate(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你不清楚获取的东西，类型是啥应该采用getObject的方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如获取名称为columnName的列的Object数据；</span></span><br><span class="line"><span class="function">Object <span class="title">getObject</span><span class="params">(String columnName)</span></span>;</span><br></pre></td></tr></table></figure><p>最后再把访问的接口都关了就可以了。<br>总体查询栗子，举个栗子如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义一个sql</span></span><br><span class="line">    String sql = <span class="string">"select * from person where pname like '%娜%'"</span>;</span><br><span class="line"></span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">    ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//驱动的加载</span></span><br><span class="line">        Class.forName(driver);</span><br><span class="line">        <span class="comment">//建立连接</span></span><br><span class="line">        conn = DriverManager.getConnection(url, username, password);</span><br><span class="line">        <span class="comment">//获得一个执行SQL的对象</span></span><br><span class="line">        stmt = conn.createStatement();</span><br><span class="line">        <span class="comment">//执行sql</span></span><br><span class="line">        rs = stmt.executeQuery(sql);</span><br><span class="line">        <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">            <span class="comment">//获得列数据</span></span><br><span class="line">            <span class="keyword">int</span> pId = rs.getInt(<span class="number">1</span>);</span><br><span class="line">            String pname = rs.getString(<span class="number">2</span>);</span><br><span class="line">            String addr = rs.getString(<span class="number">3</span>);</span><br><span class="line">            Date birth = rs.getDate(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"pid:"</span>+pId+<span class="string">"     pname:"</span>+pname+<span class="string">"   addr:"</span>+addr+<span class="string">"    birth:"</span>+birth);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"执行完毕"</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;JDBC&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;JDBC概述&quot;&gt;&lt;a href=&quot;#JDBC概述&quot; class=&quot;headerlink&quot; title=&quot;JDBC概述&quot;&gt;&lt;/a&gt;JDBC概述&lt;/h1&gt;&lt;h2 id=&quot;JDBC是神马&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MySQL数据库和SQL语言</title>
    <link href="http://yoursite.com/2020/07/07/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CSQL%E8%AF%AD%E8%A8%80/"/>
    <id>http://yoursite.com/2020/07/07/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CSQL%E8%AF%AD%E8%A8%80/</id>
    <published>2020-07-07T08:10:22.007Z</published>
    <updated>2020-07-07T08:10:29.171Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="MySQL数据库和SQL语言">TOC</a></p><h1 id="MySQL数据库和SQL语言"><a href="#MySQL数据库和SQL语言" class="headerlink" title="MySQL数据库和SQL语言"></a>MySQL数据库和SQL语言</h1><p>Java开发，必用的两个数据库Oracle和MySQL *</p><ol><li>Oracle数据库（甲骨文） 大型的数据库，收费的。 *</li><li>MySQL数据库小型的数据库，免费开源的。被Oracle收购了（在6.x版本下开始收费了）</li></ol><h2 id="MySQL数据库的安装和卸载"><a href="#MySQL数据库的安装和卸载" class="headerlink" title="MySQL数据库的安装和卸载"></a>MySQL数据库的安装和卸载</h2><ol><li>MySQL数据库的卸载</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先找到MySQL的安装路径，找到my.ini配置文件。 </span><br><span class="line">basedir=<span class="string">"C:/Program Files (x86)/MySQL/MySQL Server 5.5/"</span> ‐‐ MySQL安装路径（my.ini没有 删除）</span><br><span class="line">datadir=<span class="string">"C:/ProgramData/MySQL/MySQL Server 5.5/Data/"</span> ‐‐ MySQL数据存放位置（手动删 除） </span><br><span class="line">直接通过控制面板卸载程序</span><br></pre></td></tr></table></figure><ol start="2"><li>安装MySQL * 安装的路径中不能有中文和空格。</li><li>进行测试</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd ‐‐ 输入mysql ‐u root ‐p    ‐‐ 回车 ‐‐ 输入密码 ‐‐ 进入MySQL的服务器。</span><br></pre></td></tr></table></figure><h2 id="MySQL数据库基本操作"><a href="#MySQL数据库基本操作" class="headerlink" title="MySQL数据库基本操作"></a>MySQL数据库基本操作</h2><h3 id="MySQL数据库意义"><a href="#MySQL数据库意义" class="headerlink" title="MySQL数据库意义"></a>MySQL数据库意义</h3><p>一个数据库的服务器中包含多个数据库，一个数据库中有多张表，一个表中包含多个字段（字段和JavaBean的 属性是对应），表中存放是数据，一行数据和一个JavaBean实体对象是对应的。</p><h3 id="SQL的分类"><a href="#SQL的分类" class="headerlink" title="SQL的分类"></a>SQL的分类</h3><p>1.DDL 数据定义语言 * 创建数据库 创建表 创建视图 创建索引 修改数据库 删除数据库 修改表 删除表 * create ‐‐ 创建 alter ‐‐ 修改 drop ‐‐ 删除<br>2.DML 数据操作语言 * 操作数据 插入数据(insert) 修改数据(update) 删除数据(delete) 3.DCL 数据控制语言 * if else while<br>4.DQL 数据查询语言 * 从表中查询数据(select)<br>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><h3 id="CURD创建数据库"><a href="#CURD创建数据库" class="headerlink" title="CURD创建数据库"></a>CURD创建数据库</h3><p>创建一个名称为mydb1的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mydb1;</span><br></pre></td></tr></table></figure><p>创建一个使用utf8字符集的mydb2数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mydb2 character <span class="built_in">set</span> <span class="string">'utf8'</span>;</span><br></pre></td></tr></table></figure><p>创建一个使用utf8字符集，并带校对规则的mydb3数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mydb3 character <span class="built_in">set</span> <span class="string">'utf8'</span> collate <span class="string">'utf8_bin'</span>;</span><br></pre></td></tr></table></figure><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p> 查看所有的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>使用数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 数据库名称;</span><br></pre></td></tr></table></figure><p>查询数据库的创建的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database 数据库名称;</span><br></pre></td></tr></table></figure><p>查询当前正在使用的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名称;</span><br></pre></td></tr></table></figure><p>查看当前数据库服务器中的所有数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p> 查看前面创建的mydb2数据库的定义信息 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database mydb2;</span><br></pre></td></tr></table></figure><p>  删除前面创建的mydb1数据库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database mydb1;</span><br></pre></td></tr></table></figure><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter database 数据库名称 character <span class="built_in">set</span> <span class="string">'gbk'</span> collate <span class="string">'校对规则'</span>;</span><br></pre></td></tr></table></figure><h2 id="MySQL数据表结构操作（CURD）"><a href="#MySQL数据表结构操作（CURD）" class="headerlink" title="MySQL数据表结构操作（CURD）"></a>MySQL数据表结构操作（CURD）</h2><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>创建一张表结构（员工表练习）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table employee( </span><br><span class="line">id int primary key, </span><br><span class="line">name varchar(30), </span><br><span class="line">gender char(5), </span><br><span class="line">birthday date, </span><br><span class="line">entry_date date, </span><br><span class="line">job varchar(50), </span><br><span class="line">salary double, </span><br><span class="line">resume text </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="单表的约束"><a href="#单表的约束" class="headerlink" title="单表的约束"></a>单表的约束</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.约束的好处：保证数据的完整性。 </span><br><span class="line">2.主键约束（重要）代表记录的唯一标识。 * 关键字：primary key 通过该关键字声明某一列为主键。 * 唯一 值就不能相同 * 非空 值也不能为空 * 被引用 （和外键一起来使用） </span><br><span class="line">3.唯一约束 * 声明字段值是唯一的。使用关键字 unique </span><br><span class="line">4.非空约束 * 声明字段的值是不能空的。not null</span><br></pre></td></tr></table></figure><h3 id="删除和查看表"><a href="#删除和查看表" class="headerlink" title="删除和查看表"></a>删除和查看表</h3><p>删除表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名;</span><br></pre></td></tr></table></figure><p>查询表的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名;</span><br></pre></td></tr></table></figure><p>查看当前数据库中所有的标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>查看表的创建的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名;</span><br></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><p>在上面员工表的基本上增加一个image列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table employee add image varchar(50);</span><br></pre></td></tr></table></figure><p>修改job列，使其长度为60。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table employee modify job varchar(60);</span><br></pre></td></tr></table></figure><p>删除gender列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table employee drop gender;</span><br></pre></td></tr></table></figure><p>表名改为user。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename table employee to user;</span><br></pre></td></tr></table></figure><p>修改表的字符集为utf8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user character <span class="built_in">set</span> utf8;</span><br></pre></td></tr></table></figure><p>列名name修改为username</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table user change name username varchar(30);</span><br></pre></td></tr></table></figure><h3 id="数据的操作（CRUD）（重点）"><a href="#数据的操作（CRUD）（重点）" class="headerlink" title="数据的操作（CRUD）（重点）"></a>数据的操作（CRUD）（重点）</h3><p>插入数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//选择字段插入</span><br><span class="line">insert into 表名 (字段1,字段2,字段3) values (值1,值2,值3); </span><br><span class="line">//全部插入</span><br><span class="line">insert into 表名 values (值1,值2,值3);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into user values (1,<span class="string">'meimei'</span>,<span class="string">'1956‐1‐1'</span>,<span class="string">'1957‐1‐1'</span>,<span class="string">'HR'</span>,5000,<span class="string">'meimeimei'</span>,<span class="string">'xx'</span>); </span><br><span class="line">insert into user values (2,<span class="string">'小凤'</span>,<span class="string">'1996‐1‐1'</span>,<span class="string">'2013‐1‐1'</span>,<span class="string">'BOSS'</span>,15000,<span class="string">'mei'</span>,<span class="string">'xx'</span>);</span><br></pre></td></tr></table></figure><p>客户端向MySQL服务器端发送内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character_set_client=utf8</span><br></pre></td></tr></table></figure><p>MySQL服务器端向客户端发送内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character_set_results=utf8</span><br></pre></td></tr></table></figure><p>MySQL插入中文数据乱码</p><ol><li>先把MySQL服务停止。</li><li>.找到MySQL安装文件的my.ini的配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[client] </span><br><span class="line">port=3306 </span><br><span class="line">[mysql] </span><br><span class="line">default‐character‐<span class="built_in">set</span>=gbk</span><br></pre></td></tr></table></figure><ol start="3"><li>重启MySQL服务</li></ol><h3 id="修改数据（update）"><a href="#修改数据（update）" class="headerlink" title="修改数据（update）"></a>修改数据（update）</h3><p>将所有员工薪水修改为5000元。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> salary = 5000;</span><br></pre></td></tr></table></figure><p>将姓名为’聪聪’的员工薪水修改为3000元。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> salary = 3000 <span class="built_in">where</span> username = <span class="string">'聪聪'</span>;</span><br></pre></td></tr></table></figure><p>将姓名为’小凤’的员工薪水修改为4000元,job改为ccc。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> salary = 4000,job = <span class="string">'ccc'</span> <span class="built_in">where</span> username = <span class="string">'小凤'</span>;</span><br></pre></td></tr></table></figure><p>将如花的薪水在原有基础上增加1000元。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user <span class="built_in">set</span> salary = salary+1000 <span class="built_in">where</span> username = <span class="string">'如花'</span>;</span><br></pre></td></tr></table></figure><h3 id="删除数据（delete）"><a href="#删除数据（delete）" class="headerlink" title="删除数据（delete）"></a>删除数据（delete）</h3><p>删除表中名称为’聪聪’的记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from user <span class="built_in">where</span> username = <span class="string">'聪聪'</span>;</span><br></pre></td></tr></table></figure><p>删除表中所有记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">delete from user;</span><br><span class="line">//或者</span><br><span class="line">truncate user;</span><br></pre></td></tr></table></figure><h3 id="查询数据（select）（重点）"><a href="#查询数据（select）（重点）" class="headerlink" title="查询数据（select）（重点）"></a>查询数据（select）（重点）</h3><p>查询所有列的记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名;</span><br></pre></td></tr></table></figure><p>查询字段123的记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段1,字段2,字段3 from 表名;</span><br></pre></td></tr></table></figure><p>DISTINCT ‐‐ 去除重复的数据（面试）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct english from stu;</span><br></pre></td></tr></table></figure><h4 id="查询语句中使用运算和别名"><a href="#查询语句中使用运算和别名" class="headerlink" title="查询语句中使用运算和别名"></a>查询语句中使用运算和别名</h4><p>在所有学生分数上加10分特长分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,(math+10) m,(english+10) e,(chinese+10) c from stu;</span><br></pre></td></tr></table></figure><p>统计每个学生的总分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,(math+english+chinese) 总分 from stu;</span><br></pre></td></tr></table></figure><h4 id="使用where条件过滤"><a href="#使用where条件过滤" class="headerlink" title="使用where条件过滤"></a>使用where条件过滤</h4><p>查询总分大于200分的所有同学</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,math+english+chinese from stu <span class="built_in">where</span> (math+english+chinese) &gt; 200;</span><br></pre></td></tr></table></figure><h6 id="where子句中出现的运算"><a href="#where子句中出现的运算" class="headerlink" title="where子句中出现的运算"></a>where子句中出现的运算</h6><ol><li><blockquote><p>&lt; &lt;= &gt;= = &lt;&gt; 大于、小于、大于(小于)等于、不等于</p></blockquote></li><li>in 表示范围。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> math = 18;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//查询数学分数为78,18,99的同学。</span><br><span class="line">select * from stu <span class="built_in">where</span> math <span class="keyword">in</span> (78,18,99);</span><br></pre></td></tr></table></figure><ol start="3"><li>like 模糊查询 ‐‐ 符合模糊的条件</li></ol><ul><li><input checked="" disabled="" type="checkbox"> 姓张的名称（只有两个字）的记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> name like <span class="string">'张_'</span>;</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 姓张的名称（张飞 张翼德 张是是是冠希）的记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> name like <span class="string">'张%'</span>;</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 末尾是张（聪聪张 XSDF张）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> name like <span class="string">'%张'</span>;</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 只要名称中包含张</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> name like <span class="string">'%张%'</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>is null 判断某一个字段记录是否为空</li><li>and与 or或者 not非<ul><li><input checked="" disabled="" type="checkbox"> 查询英语分数在 80－90之间的同学。</li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> english &gt;= 10 and english &lt; 19;</span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> 查询数学分&gt;80或者语文分&gt;80的同学。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu <span class="built_in">where</span> math &gt; 80 or chinese &gt; 80;</span><br></pre></td></tr></table></figure><h4 id="order-by-对查询的结果进行排序"><a href="#order-by-对查询的结果进行排序" class="headerlink" title="order by 对查询的结果进行排序"></a>order by 对查询的结果进行排序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 <span class="built_in">where</span> 条件 order by 列名 升序/降序</span><br><span class="line">order by 列名 asc;（升序，默认值）</span><br><span class="line">order by 列名 desc;（降序）</span><br></pre></td></tr></table></figure><p>对学生成绩按照英语进行降序排序，英语相同学员按照数学降序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,english,math from stu order by english desc,math desc;</span><br></pre></td></tr></table></figure><p>对姓聪的学生成绩排序输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,(math+english+chinese) as total from stu <span class="built_in">where</span> name like <span class="string">'聪%'</span> order by total desc;</span><br></pre></td></tr></table></figure><h4 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h4><p>聚集函数：总计某一列数据总和。一列的个数。一列的平均数。一列中最大值和最小值。<br>聚集函数来操作列的。</p><blockquote><ul><li>count ‐‐ 计数 </li><li>sum ‐‐ 求和<ul><li>ifnull 判断是否为空：语法：ifnul(xxx,0) 如果xxx为null，替换成0 </li></ul></li><li>avg ‐‐ 平均值 </li><li>max ‐‐ 最大值<ul><li>min ‐‐ 最小值</li></ul></li></ul></blockquote><p>统计总分大于220的人数有多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from stu <span class="built_in">where</span> math + english+chinese &gt; 200;</span><br></pre></td></tr></table></figure><p>统计一个班级语文、英语、数学的成绩总和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select sum(ifnull(math,0)+english+chinese) from stu; </span><br><span class="line">select sum(math) + sum(english) + sum(chinese) from stu;</span><br></pre></td></tr></table></figure><p>统计一个班级语文成绩平均分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select avg(chinese) from stu;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;MySQL数据库和SQL语言&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;MySQL数据库和SQL语言&quot;&gt;&lt;a href=&quot;#MySQL数据库和SQL语言&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据库和SQL语言&quot;&gt;&lt;/a&gt;MyS
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>XML</title>
    <link href="http://yoursite.com/2020/07/06/XML/"/>
    <id>http://yoursite.com/2020/07/06/XML/</id>
    <published>2020-07-06T08:56:15.588Z</published>
    <updated>2020-07-06T08:56:22.775Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="XML学习">TOC</a></p><h2 id="XML的用处"><a href="#XML的用处" class="headerlink" title="XML的用处"></a>XML的用处</h2><p>XML 指可扩展标记语言（eXtensible Markup Language）。<br>XML 被设计用来传输和存储数据。（例如java与php的数据传输）</p><h2 id="XML的使用"><a href="#XML的使用" class="headerlink" title="XML的使用"></a>XML的使用</h2><h3 id="XML的定义"><a href="#XML的定义" class="headerlink" title="XML的定义"></a>XML的定义</h3><p>在抬头第一行第一列声明</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br></pre></td></tr></table></figure><p>而后采用标签的形式包装信息，与json的键值对相比，其可以存储结构信息（转为dom后成为dom树）可以在标签内自定义属性，但属性不可以重复。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;persons&gt;</span><br><span class="line">    &lt;person id=<span class="string">"person1"</span> gender=<span class="string">"男"</span>&gt;</span><br><span class="line">        &lt;name&gt;鲁智深&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;30&lt;/age&gt;</span><br><span class="line">        &lt;address&gt;五台山&lt;/address&gt;</span><br><span class="line">    &lt;/person&gt;</span><br><span class="line">&lt;/persons&gt;</span><br></pre></td></tr></table></figure><h3 id="XML的约束"><a href="#XML的约束" class="headerlink" title="XML的约束"></a>XML的约束</h3><h4 id="DTD约束"><a href="#DTD约束" class="headerlink" title="DTD约束"></a>DTD约束</h4><p>元素（ELEMENT）</p><p>元素定义  在DTD中出现的第一个元素为根元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT 元素名称 元素内容声明&gt;</span><br></pre></td></tr></table></figure><p>要点：包含符号和数据类型两部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE users[</span><br><span class="line">        &lt;!ELEMENT users (user+) &gt;</span><br><span class="line">        &lt;!ELEMENT user (name,age,addr) &gt;</span><br><span class="line">        &lt;!ELEMENT name (<span class="comment">#PCDATA) &gt;</span></span><br><span class="line">        &lt;!ELEMENT age (<span class="comment">#PCDATA) &gt;</span></span><br><span class="line">        &lt;!ELEMENT addr (<span class="comment">#PCDATA) &gt;</span></span><br><span class="line">        ]&gt;</span><br><span class="line">&lt;users&gt;</span><br><span class="line">    &lt;user&gt;</span><br><span class="line">        &lt;name&gt;zhangsan&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;23&lt;/age&gt;</span><br><span class="line">        &lt;addr&gt;shanghai&lt;/addr&gt;</span><br><span class="line">    &lt;/user&gt;</span><br><span class="line">    &lt;user&gt;</span><br><span class="line">        &lt;name&gt;lisi&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;24&lt;/age&gt;</span><br><span class="line">        &lt;addr&gt;beijing&lt;/addr&gt;</span><br><span class="line">    &lt;/user&gt;</span><br><span class="line">&lt;/users&gt;</span><br></pre></td></tr></table></figure><h4 id="shema约束"><a href="#shema约束" class="headerlink" title="shema约束"></a>shema约束</h4><p>要定义一个Schema文件，这时它的扩展名必须是.xsd。在这个文件中根元素必须是schema。<br>在定义Schema文件的时候，由于这个Schema文件本身就是xml，它也要受到别的约束。而这个约束是W3C组织提前定义好的，<br>在Schema文件中需要提前引入进来在根标签中使用属性进行进入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;schema  xmlns=<span class="string">"http://www.w3.org/2001/XMLSchema"</span>   引入W3C定义的schema书写的约束</span><br><span class="line">targetNamespace=<span class="string">"http://www.itcast.org/book"</span> 给当前的Schema文件起名字（命名空间）</span><br><span class="line">作用是当哪个xml要引入这个schema约束的时候，必须通过当前targetNamespace 后面书写的uri地址来引入</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;schema xmlns=<span class="string">"http://www.w3.org/2001/XMLSchema"</span> </span><br><span class="line">    targetNamespace=<span class="string">"http://www.itcast.org/book"</span> </span><br><span class="line">    elementFormDefault=<span class="string">"qualified"</span>&gt;</span><br><span class="line">    &lt;element name=<span class="string">"books"</span>&gt;</span><br><span class="line">        &lt;complexType&gt;</span><br><span class="line">            &lt;sequence&gt;</span><br><span class="line">                &lt;element name=<span class="string">"book"</span>&gt;</span><br><span class="line">                    &lt;complexType&gt;</span><br><span class="line">                        &lt;sequence&gt;</span><br><span class="line">                            &lt;element name=<span class="string">"name"</span>&gt;&lt;/element&gt;</span><br><span class="line">                            &lt;element name=<span class="string">"author"</span>&gt;&lt;/element&gt;</span><br><span class="line">                            &lt;element name=<span class="string">"price"</span>&gt;&lt;/element&gt;</span><br><span class="line">                        &lt;/sequence&gt;</span><br><span class="line">                    &lt;/complexType&gt;</span><br><span class="line">                &lt;/element&gt;</span><br><span class="line">            &lt;/sequence&gt;</span><br><span class="line">        &lt;/complexType&gt;</span><br><span class="line">    &lt;/element&gt;</span><br><span class="line">&lt;/schema&gt;</span><br></pre></td></tr></table></figure><h3 id="XML的解析"><a href="#XML的解析" class="headerlink" title="XML的解析"></a>XML的解析</h3><p>举个栗子，此时的XML信息为如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;persons&gt;</span><br><span class="line">    &lt;person id=<span class="string">"person1"</span> gender=<span class="string">"男"</span>&gt;</span><br><span class="line">        &lt;name&gt;鲁智深&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;30&lt;/age&gt;</span><br><span class="line">        &lt;address&gt;五台山&lt;/address&gt;</span><br><span class="line">    &lt;/person&gt;</span><br><span class="line"></span><br><span class="line">    &lt;person id=<span class="string">"person2"</span> gender=<span class="string">"女"</span>&gt;</span><br><span class="line">        &lt;name&gt;扈三娘&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;30&lt;/age&gt;</span><br><span class="line">        &lt;address&gt;祝家庄&lt;/address&gt;</span><br><span class="line">    &lt;/person&gt;</span><br><span class="line"></span><br><span class="line">    &lt;person id=<span class="string">"person3"</span> gender=<span class="string">"男"</span>&gt;</span><br><span class="line">        &lt;name&gt;宋江&lt;/name&gt;</span><br><span class="line">        &lt;age&gt;30&lt;/age&gt;</span><br><span class="line">        &lt;address&gt;山东君诚&lt;/address&gt;</span><br><span class="line">    &lt;/person&gt;</span><br><span class="line">&lt;/persons&gt;</span><br></pre></td></tr></table></figure><ol><li>第一步 创建sax的解析器对象    `</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SAXReader reader = new SAXReader();`</span><br></pre></td></tr></table></figure><ol start="2"><li>读取xml文件，生成document对象</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Document document = reader.read(<span class="string">"D:\\BaiduNetdiskDownload\\06xml\\src\\person1"</span>);</span><br></pre></td></tr></table></figure><p>此时生成dom树，生成的dom树的示意图如下所示：<br><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200706164432788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2prczg4OTk1NjU2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="3"><li>获得根结点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Element root = document.getRootElement();</span><br><span class="line">//获取到当前结点的名称</span><br><span class="line">   System.out.println(root.getName());</span><br></pre></td></tr></table></figure><ol start="4"><li>获取persons下的所有perison节点  没有参数就是全部子节点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Element&gt; persons =  root.elements(<span class="string">"person"</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>循环读取内部结点的内容</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//增强<span class="keyword">for</span>循环</span><br><span class="line"><span class="keyword">for</span> (Element person : persons) &#123;</span><br><span class="line">//获取到属性的值</span><br><span class="line">String id = person.attributeValue(<span class="string">"id"</span>);</span><br><span class="line">System.out.println(id);</span><br><span class="line">String gender = person.attributeValue(<span class="string">"gender"</span>);</span><br><span class="line">System.out.println(gender);</span><br><span class="line"></span><br><span class="line">//获取到person下的子节点</span><br><span class="line">List&lt;Element&gt; names = person.elements(<span class="string">"name"</span>);</span><br><span class="line">//遍历</span><br><span class="line"><span class="keyword">for</span> (Element name : names) &#123;</span><br><span class="line">String text = name.getText();</span><br><span class="line">System.out.println(<span class="string">"name的标签内容"</span>+text);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"-------------------------"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用XPATH方式读取</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//使用xpath方式</span><br><span class="line">List&lt;Element&gt; list = root.selectNodes(<span class="string">"/persons/person/name"</span>);</span><br><span class="line"><span class="keyword">for</span> (Element element : list) &#123;</span><br><span class="line">//打印内容</span><br><span class="line">System.out.println(element.getText());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//获取到所有的name节点</span><br><span class="line">List&lt;Element&gt; list1 = root.selectNodes(<span class="string">"//name"</span>);</span><br><span class="line"><span class="keyword">for</span> (Element element : list1) &#123;</span><br><span class="line">//打印内容</span><br><span class="line">System.out.println(element.getText());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过属性的方式来获取</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root.selectNodes(<span class="string">"//person[@id]"</span>);</span><br><span class="line">root.selectNodes(<span class="string">"//person[@id]='person2'"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;XML学习&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;XML的用处&quot;&gt;&lt;a href=&quot;#XML的用处&quot; class=&quot;headerlink&quot; title=&quot;XML的用处&quot;&gt;&lt;/a&gt;XML的用处&lt;/h2&gt;&lt;p&gt;XML 指可扩展标记语言（eXtensibl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JQUREY</title>
    <link href="http://yoursite.com/2020/07/05/JQUREY/"/>
    <id>http://yoursite.com/2020/07/05/JQUREY/</id>
    <published>2020-07-05T08:43:20.018Z</published>
    <updated>2020-07-05T08:43:27.187Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="JQUREY学习文档">TOC</a></p><h2 id="1-JQuery是什么"><a href="#1-JQuery是什么" class="headerlink" title="1. JQuery是什么"></a>1. JQuery是什么</h2><p>jQuery是一个快速的，简洁的javaScript库，使用户能更方便地处理HTML documents、events、实现动画效果，并且方便地为网站提供AJAX交互。<br>jQuery还有一个比较大的优势是，它的文档说明很全，而且各种应用也说得很详细，同时还有许多成熟的插件可供选择。</p><h2 id="2-引入Jquery"><a href="#2-引入Jquery" class="headerlink" title="2. 引入Jquery"></a>2. 引入Jquery</h2><pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;script/jquery-1.8.3.js&quot;&gt;&lt;/script&gt;&lt;script language=&quot;JavaScript&quot;&gt;  $(document).ready(function(){//等待dom元素加载完毕,类似window.onload;      alert(&quot;您好,我是张三丰&quot;);  });  //或者   $(function () {        alert(&quot;hello&quot;)   })&lt;/script&gt;</code></pre><h2 id="3-jQuery对象与DOM对象"><a href="#3-jQuery对象与DOM对象" class="headerlink" title="3. jQuery对象与DOM对象"></a>3. jQuery对象与DOM对象</h2><p>jQuery 对象就是通过jQuery包装DOM对象后产生的对象。<br>jQuery 对象是 jQuery 独有的. 如果一个对象是 jQuery 对象, 那么它就可以使用 jQuery 里的方法。<br>虽然jQuery对象是包装DOM对象后产生的，但是jQuery无法使用DOM对象的任何方法，同理DOM对象也不能使用jQuery里的方法.乱使用会报错。</p><h3 id="3-1-DOM对象与jQuery对象互转"><a href="#3-1-DOM对象与jQuery对象互转" class="headerlink" title="3.1 DOM对象与jQuery对象互转"></a>3.1 DOM对象与jQuery对象互转</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//jquery写法  这个是文档加载完 才运行的</span><br><span class="line">$(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    //获取 dom对象 </span><br><span class="line">    var uname = document.getElementById(<span class="string">"username"</span>);;</span><br><span class="line">    alert(uname.value);</span><br><span class="line"></span><br><span class="line">    //把dom转换为 jquery对象</span><br><span class="line">    var unameJq =$(uname);</span><br><span class="line">    var unameVal = unameJq.val();</span><br><span class="line">    alert(unameVal);</span><br><span class="line"></span><br><span class="line">    //把jquery对象 转回dom对象   jQuery对象是一个数组对象，可以通过[index]的方法，来得到相应的DOM对象</span><br><span class="line">    var unameDom = unameJq[0];</span><br><span class="line">    //或者</span><br><span class="line">    // var unameDom = unameJq.get(0);</span><br><span class="line">    alert(unameDom.value);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-jQuery-选择器"><a href="#4-jQuery-选择器" class="headerlink" title="4. jQuery 选择器"></a>4. jQuery 选择器</h2><h3 id="4-1-基本选择器"><a href="#4-1-基本选择器" class="headerlink" title="4.1 基本选择器"></a>4.1 基本选择器</h3><h4 id="4-1-1-id选择器"><a href="#4-1-1-id选择器" class="headerlink" title="4.1.1 id选择器"></a>4.1.1 id选择器</h4><p>#id     用法: $(”#myDiv”);    返回值  单个元素的组成的集合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//获取 dom对象  id选择器</span><br><span class="line">var unameJq = $(<span class="string">"#username"</span>);</span><br></pre></td></tr></table></figure><h4 id="4-1-2-元素选择器"><a href="#4-1-2-元素选择器" class="headerlink" title="4.1.2 元素选择器"></a>4.1.2 元素选择器</h4><p>Element       用法: $(”div”)     返回值  集合元素<br>       说明: element的英文翻译过来是”元素”,所以element其实就是html已经定义的标签元素,例如 div, input, a 等等.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//元素 选择器</span><br><span class="line">var inputArray = $(<span class="string">"input"</span>);</span><br><span class="line"><span class="keyword">for</span>(var i=0;i&lt;inputArray.length;i++)&#123;</span><br><span class="line">     var ip = inputArray[i];</span><br><span class="line">     alert($(ip).val());</span><br><span class="line">&#125;</span><br><span class="line">//推荐使用的遍历方法</span><br><span class="line">inputArray.each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    alert($(this).val());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-1-3-类选择器"><a href="#4-1-3-类选择器" class="headerlink" title="4.1.3 类选择器"></a>4.1.3 类选择器</h4><p>用法: $(”.myClass”)      返回值  集合元素<br>说明: 这个标签是直接选择html代码中class=”myClass”的元素或元素组(因为在同一html页面中class是可以存在多个同样值的).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"mydiv"</span>&gt;我是div1&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"mydiv"</span>&gt;我是div2&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"mydiv1"</span>&gt;我是div3&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//js</span><br><span class="line">var divobj = $(<span class="string">".mydiv"</span>);     </span><br><span class="line">divobj.each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).text())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-2-层次选择器"><a href="#4-2-层次选择器" class="headerlink" title="4.2 层次选择器"></a>4.2 层次选择器</h3><p>如果想通过 DOM 元素之间的层次关系来获取特定元素, 例如后代元素, 子元素, 相邻元素, 兄弟元素等, 则需要使用层次选择器.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;label&gt;Name:&lt;/label&gt;</span><br><span class="line">    &lt;input name=<span class="string">"name"</span>/&gt;</span><br><span class="line">    &lt;fieldset&gt;</span><br><span class="line">        &lt;label&gt;Newsletter:&lt;/label&gt;</span><br><span class="line">        &lt;input name=<span class="string">"newsletter"</span>/&gt;</span><br><span class="line">    &lt;/fieldset&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h4 id="4-2-1-祖先后代型-ancestor-descendant"><a href="#4-2-1-祖先后代型-ancestor-descendant" class="headerlink" title="4.2.1 祖先后代型 ancestor descendant"></a>4.2.1 祖先后代型 ancestor descendant</h4><p>用法: $(”form input”) ;   返回值  集合元素<br>说明: 在给定的祖先元素下匹配所有后代元素.这个要下面讲的”parent &gt; child”区分开.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   //ancestor descendant</span><br><span class="line">   var inputs = $(<span class="string">"form input"</span>);</span><br><span class="line">inputs.each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).attr(<span class="string">"name"</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-2-2-父子元素型-parent-gt-child"><a href="#4-2-2-父子元素型-parent-gt-child" class="headerlink" title="4.2.2 父子元素型 parent &gt; child"></a>4.2.2 父子元素型 parent &gt; child</h4><p>用法: $(”form &gt; input”) ;    返回值  集合元素<br>说明: 在给定的父元素下匹配所有子元素.注意:要区分好后代元素与子元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//只拿儿子</span><br><span class="line">var input = $(<span class="string">"form &gt; input"</span>);</span><br><span class="line">input.each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).attr(<span class="string">"name"</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="4-2-3-紧跟型-prev-next"><a href="#4-2-3-紧跟型-prev-next" class="headerlink" title="4.2.3 紧跟型 prev + next"></a>4.2.3 紧跟型 prev + next</h4><p>用法: $(”label + input”) ;   返回值  集合元素<br>说明: 匹配所有紧接在 prev 元素后的 next 元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//prev + next</span><br><span class="line">var inpu = $(<span class="string">"label + input"</span>);</span><br><span class="line">inpu.each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).attr(<span class="string">"name"</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-3-过滤选择器"><a href="#4-3-过滤选择器" class="headerlink" title="4.3 过滤选择器"></a>4.3 过滤选择器</h3><p>过滤选择器主要是通过特定的过滤规则来筛选出所需的 DOM 元素, 该选择器都以<kbd>：</kbd>开头<br>按照不同的过滤规则, 过滤选择器可以分为基本过滤, 内容过滤, 可见性过滤, 属性过滤, 子元素过滤和表单对象属性过滤选择器.</p><h4 id="4-3-1-基本过滤器"><a href="#4-3-1-基本过滤器" class="headerlink" title="4.3.1 基本过滤器"></a>4.3.1 基本过滤器</h4><blockquote><ol><li>:first<br>用法: $(”tr:first”) ;   返回值  单个元素的组成的集合<br>说明: 匹配找到的第一个元素</li><li>:last<br>用法: $(”tr:last”)   返回值  集合元素<br>说明: 匹配找到的最后一个元素.与 :first 相对应.<ol start="3"><li>:not(selector)<br>用法: $(”input:not(:checked)”)返回值  集合元素<br>说明: 去除所有与给定选择器匹配的元素.有点类似于”非”,意思是没有被选中的input(当input的type=”checkbox”).</li><li>:even<br>用法: $(”tr:even”)   返回值  集合元素<br>说明: 匹配所有索引值为偶数的元素，从 0 开始计数.js的数组都是从0开始计数的.例如要选择table中的行,因为是从0开始计数,所以table中的第一个tr就为偶数0.</li><li>: odd<br>用法: $(”tr:odd”) 返回值  集合元素<br>说明: 匹配所有索引值为奇数的元素,和:even对应,从 0 开始计数.</li></ol></li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=<span class="string">"1"</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;狗子&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;狗子&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;狗子&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;狗子&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;狗子&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//过滤选择器</span><br><span class="line">alert($(<span class="string">"li:first"</span>).text());</span><br><span class="line">alert($(<span class="string">"li:last"</span>).text());</span><br><span class="line"></span><br><span class="line">alert($(<span class="string">"li:odd"</span>).text());</span><br><span class="line">alert($(<span class="string">"li:even"</span>).text());</span><br><span class="line"></span><br><span class="line">//1 3 5 7   even 其实是偶数  其实是从0 开始的</span><br><span class="line">$(<span class="string">"tr:even"</span>).css(&#123;background:<span class="string">"yellow"</span>&#125;);</span><br><span class="line">//2 4 6 8 odd 其实是奇数  其实是从0 开始的</span><br><span class="line">$(<span class="string">"tr:odd"</span>).css(&#123;background:<span class="string">"blue"</span>&#125;);</span><br></pre></td></tr></table></figure><h4 id="4-3-2-属性过滤选择器"><a href="#4-3-2-属性过滤选择器" class="headerlink" title="4.3.2 属性过滤选择器"></a>4.3.2 属性过滤选择器</h4><blockquote><ol><li>[attribute]<br>用法: $(”div[id]“) ;  返回值  集合元素<br>说明: 匹配包含给定属性的元素. 例子中是选取了所有带”id”属性的div标签.</li><li>[attribute=value]<br>用法: $(”input[name=’newsletter’]“).attr(”checked”, true);    返回值  集合元素<br>说明: 匹配给定的属性是某个特定值的元素.例子中选取了所有 name 属性是 newsletter 的 input 元素.<ol start="3"><li>[attributeFilter1][attributeFilter2][attributeFilterN]<br>用法: $(”input[id][name=‘man’]“)  返回值  集合元素<br>说明: 复合属性选择器,需要同时满足多个条件时使用.又是一个组合,这种情况我们实际使用的时候很常用.这个例子中选择的是所有含有 id 属性,并且它的 name 属性是以 man 结尾的元素.</li></ol></li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> name=<span class="string">"newsletter"</span> checked=<span class="string">"checked"</span> value=<span class="string">"Daily"</span>/&gt;天</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> name=<span class="string">"newsletter"</span> value=<span class="string">"Weekly"</span>/&gt;星期</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">"checkbox"</span> name=<span class="string">"newsletter"</span> checked=<span class="string">"checked"</span> value=<span class="string">"Monthly"</span>/&gt;月</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myclick</span></span>() &#123;</span><br><span class="line">$(<span class="string">"input:checked"</span>).each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).val());</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">"input:not(:checked)"</span>).each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).val());</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">"input[type='checkbox']"</span>).each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).attr(<span class="string">"value"</span>));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="string">"input[type='checkbox'][name]"</span>).each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">alert($(this).attr(<span class="string">"value"</span>));</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-JQuery-中的-DOM-操作"><a href="#5-JQuery-中的-DOM-操作" class="headerlink" title="5 . JQuery 中的 DOM 操作"></a>5 . JQuery 中的 DOM 操作</h2><h3 id="5-1-append与appendTo"><a href="#5-1-append与appendTo" class="headerlink" title="5.1 append与appendTo"></a>5.1 append与appendTo</h3><p>DOM(Document Object Model—文档对象模型)：一种与浏览器, 平台, 语言无关的接口, 使用该接口可以轻松地访问页面中所有的标准组件</p><ul><li>append(content) :向每个匹配的元素的内部的结尾处追加内容</li><li>appendTo(content) :将每个匹配的元素追加到指定的元素中的内部结尾处</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myclick</span></span>() &#123;</span><br><span class="line">//编程了jqurey对象的dom元素</span><br><span class="line">var jqP = $(<span class="string">"&lt;p&gt;白日依山尽，黄河入海流&lt;/p&gt;"</span>);</span><br><span class="line">$(<span class="string">"div"</span>).append(jqP);</span><br><span class="line">//或者</span><br><span class="line">// jqP.appendTo($(<span class="string">"div"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-综合案例（左右选框）"><a href="#5-2-综合案例（左右选框）" class="headerlink" title="5.2 综合案例（左右选框）"></a>5.2 综合案例（左右选框）</h3><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/2020070515521381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2prczg4OTk1NjU2,size_16,color_FFFFFF,t_70" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    select&#123;</span><br><span class="line">        width: 120px;</span><br><span class="line">        height: 150px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;!--引入jquery文件--&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script  <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">moveRight</span></span>() &#123;</span><br><span class="line">            // $(<span class="string">"#select1 option"</span>).each(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">            //     var status = $(this).attr(<span class="string">"selected"</span>);</span><br><span class="line">            //     <span class="keyword">if</span>(status == <span class="string">"selected"</span>)&#123;</span><br><span class="line">            //         $(<span class="string">"#select2"</span>).append($(this));</span><br><span class="line">            //     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            //         console.log(123);</span><br><span class="line">            //     &#125;</span><br><span class="line">            // &#125;)</span><br><span class="line">            $(<span class="string">"#select1 option:selected"</span>).appendTo($(<span class="string">"select2"</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">moveLeft</span></span>() &#123;</span><br><span class="line">            $(<span class="string">"#select2 option:selected"</span>).appendTo($(<span class="string">"select1"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">moveRightAll</span></span>() &#123;</span><br><span class="line">            $(<span class="string">"#select1 option"</span>).appendTo($(<span class="string">"#select2"</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="function"><span class="title">moveLeftAll</span></span>() &#123;</span><br><span class="line">            $(<span class="string">"#select2 option"</span>).appendTo($(<span class="string">"#select1"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &lt;select id=<span class="string">"select1"</span> multiple=<span class="string">"multiple"</span>&gt;</span><br><span class="line">                &lt;option&gt;菜单管理&lt;/option&gt;</span><br><span class="line">                &lt;option &gt;部门管理&lt;/option&gt;</span><br><span class="line">                &lt;option&gt;员工管理&lt;/option&gt;</span><br><span class="line">                &lt;option&gt;库存管理&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &lt;button onclick=<span class="string">"moveRight()"</span>&gt;&gt;&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">            &lt;button onclick=<span class="string">"moveRightAll()"</span>&gt;全右&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">            &lt;button onclick=<span class="string">"moveLeft()"</span>&gt;&lt;&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">            &lt;button onclick=<span class="string">"moveLeftAll()"</span>&gt;全左&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">            &lt;select id=<span class="string">"select2"</span> multiple=<span class="string">"multiple"</span>&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><h3 id="5-3-外部插入节点（以及正则表达）"><a href="#5-3-外部插入节点（以及正则表达）" class="headerlink" title="5.3 外部插入节点（以及正则表达）"></a>5.3 外部插入节点（以及正则表达）</h3><pre><code>*  after(content) :在每个匹配的元素之后插入内容 *  before(content):在每个匹配的元素之前插入内容 </code></pre><p>以上方法不但能将新创建的 DOM 元素插入到文档中, 也能对原有的 DOM 元素进行移动.<br>如下面的 判断手机号正确与否</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">手机号:&lt;input id=<span class="string">"username"</span> <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">密码:&lt;input id=<span class="string">"password"</span> <span class="built_in">type</span>=<span class="string">"password"</span> value=<span class="string">"jks88990041"</span>/&gt;&lt;br/&gt;</span><br><span class="line">验证码:&lt;input id=<span class="string">"cap"</span> <span class="built_in">type</span>=<span class="string">"text"</span> value=<span class="string">"验证码"</span>/&gt;&lt;br/&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"myclick()"</span>&gt;点击&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myclick</span></span>() &#123;</span><br><span class="line">var uname = $(<span class="string">"#username"</span>);</span><br><span class="line">//获得的文本框的值</span><br><span class="line">       var val = uname.val();</span><br><span class="line">       <span class="keyword">if</span>(!(/^1[3456789]\d&#123;9&#125;$/.<span class="built_in">test</span>(val))) &#123;</span><br><span class="line">       //创建一个节点</span><br><span class="line">       // var tip = $(<span class="string">"&lt;font color='#7fffd4'&gt;请输入正确格式手机号码&lt;/font&gt;"</span>);</span><br><span class="line">       // uname.after(tip);</span><br><span class="line">       //或者 这要在后面放一个span之类的标签</span><br><span class="line">       uname.next().html(<span class="string">"&lt;font color='#7fffd4'&gt;请输入正确格式手机号码&lt;/font&gt;"</span>);</span><br><span class="line">       //对应的有放前面</span><br><span class="line">       // uname.before(tip);</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         var tip = $(<span class="string">"&lt;font color='#7fffd4'&gt;可用&lt;/font&gt;"</span>);</span><br><span class="line">         uname.after(tip);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-4-创建与删除节点"><a href="#5-4-创建与删除节点" class="headerlink" title="5.4 创建与删除节点"></a>5.4 创建与删除节点</h3><p>创建节点: 使用 jQuery 的工厂函数 $(): $(html); 会根据传入的 html 标记字符串创建一个 DOM 对象, 并把这个 DOM 对象包装成一个 jQuery 对象返回.</p><h4 id="5-4-1-创建节点"><a href="#5-4-1-创建节点" class="headerlink" title="5.4.1 创建节点"></a>5.4.1 创建节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var jqP = $(<span class="string">"&lt;p&gt;白日依山尽，黄河入海流&lt;/p&gt;"</span>);</span><br><span class="line">$(<span class="string">"div"</span>).append(jqP);</span><br></pre></td></tr></table></figure><h4 id="5-4-2-删除节点"><a href="#5-4-2-删除节点" class="headerlink" title="5.4.2 删除节点"></a>5.4.2 删除节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//删除节点</span><br><span class="line">$(<span class="string">"#div2"</span>).remove();</span><br></pre></td></tr></table></figure><h4 id="5-4-3-删除内部元素"><a href="#5-4-3-删除内部元素" class="headerlink" title="5.4.3 删除内部元素"></a>5.4.3 删除内部元素</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//删除内部所有 子元素</span><br><span class="line">$(<span class="string">"#div1"</span>).empty();</span><br></pre></td></tr></table></figure><h4 id="5-4-4-复制节点"><a href="#5-4-4-复制节点" class="headerlink" title="5.4.4 复制节点"></a>5.4.4 复制节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var firstDiv = $(<span class="string">"#div1"</span>);</span><br><span class="line">var copy= firstDiv.clone()</span><br><span class="line">firstDiv.after(copy);</span><br></pre></td></tr></table></figure><h3 id="5-5-综合案例（添加用户）"><a href="#5-5-综合案例（添加用户）" class="headerlink" title="5.5 综合案例（添加用户）"></a>5.5 综合案例（添加用户）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;姓名:&lt;input id=<span class="string">"name"</span> <span class="built_in">type</span>=<span class="string">"text"</span> &gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;邮箱:&lt;input id=<span class="string">"email"</span> <span class="built_in">type</span>=<span class="string">"text"</span> &gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;年龄:&lt;input id=<span class="string">"age"</span> <span class="built_in">type</span>=<span class="string">"text"</span> &gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;button onclick=<span class="string">"add()"</span>&gt;添加&lt;/button&gt;&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;table border=<span class="string">"1"</span>&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;姓名&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;邮箱&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;年龄&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;操作&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line"></span><br><span class="line">    &lt;tbody  id=<span class="string">"tb"</span>&gt;</span><br><span class="line">        &lt;td&gt;一只柴犬&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;yu@qq.com&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;22&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;button value=<span class="string">"一只柴犬"</span> onclick=<span class="string">"shanchu(this)"</span>&gt;删除&lt;/button&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"> &lt;style&gt;</span><br><span class="line">     div&#123;</span><br><span class="line">         width: 200px;</span><br><span class="line">         height: 200px;</span><br><span class="line">         border: 1px solid blue;</span><br><span class="line">     &#125;</span><br><span class="line"> &lt;/style&gt;</span><br><span class="line"> &lt;!--引入jquery文件--&gt;</span><br><span class="line"> &lt;script src=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line"> &lt;script  <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"> //添加用户</span><br><span class="line">     <span class="keyword">function</span> <span class="function"><span class="title">add</span></span>() &#123;</span><br><span class="line">         var name = $(<span class="string">"#name"</span>).val();</span><br><span class="line">         var email = $(<span class="string">"#email"</span>).val();</span><br><span class="line">         var age = $(<span class="string">"#age"</span>).val();</span><br><span class="line">//这边的格式复制过来就行</span><br><span class="line">         var tr = $(<span class="string">"&lt;tr&gt;\n"</span>+</span><br><span class="line">                     <span class="string">"&lt;td&gt;"</span>+name+<span class="string">"&lt;/td&gt;\n"</span>+</span><br><span class="line">                     <span class="string">"&lt;td&gt;"</span>+email+<span class="string">"&lt;/td&gt;\n"</span>+</span><br><span class="line">                     <span class="string">"&lt;td&gt;"</span>+age+<span class="string">"&lt;/td&gt;\n"</span>+</span><br><span class="line">                     <span class="string">"&lt;td&gt;&lt;button value=\"一只柴犬\" onclick=\"shanchu(this)\"&gt;删除&lt;/button&gt;&lt;/td&gt;\n"</span>+</span><br><span class="line">                     <span class="string">"&lt;/tr&gt;"</span>);</span><br><span class="line"></span><br><span class="line">         $(<span class="string">"#tb"</span>).append(tr);</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">function</span> shanchu(aobj) &#123;</span><br><span class="line">         //可以通过id定位</span><br><span class="line">         // console.log($(<span class="string">"#button1"</span>).val());</span><br><span class="line">         // $(<span class="string">"#button1"</span>).parent().parent().remove();</span><br><span class="line">         console.log($(aobj).val());</span><br><span class="line">         $(aobj).parent().parent().remove();</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line"> &lt;style&gt;</span><br><span class="line">     table&#123;</span><br><span class="line">         width: 800px;</span><br><span class="line">         border-collapse: collapse;</span><br><span class="line">     &#125;</span><br><span class="line"> &lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-属性操作"><a href="#6-属性操作" class="headerlink" title="6. 属性操作"></a>6. 属性操作</h2><h3 id="6-1-获取属性和设置属性-attr（）"><a href="#6-1-获取属性和设置属性-attr（）" class="headerlink" title="6.1 获取属性和设置属性 attr（）"></a>6.1 获取属性和设置属性 attr（）</h3><p>attr(): 获取属性和设置属性<br>当为该方法传递一个参数时, 即为某元素的获取指定属性<br>当为该方法传递两个参数时, 即为某元素设置指定属性的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//当为该方法传递一个参数时，即为某元素到的获取指定属性</span><br><span class="line">$(<span class="string">"#myImg"</span>).attr(<span class="string">"src"</span>);</span><br><span class="line">//当为该方法传递两个参数时，即为某元素设置指定属性的值</span><br><span class="line">$(<span class="string">"#myImg"</span>).attr(<span class="string">"height"</span>,<span class="string">"200"</span>);</span><br></pre></td></tr></table></figure><h3 id="6-2-html内容操作-html（）"><a href="#6-2-html内容操作-html（）" class="headerlink" title="6.2 html内容操作  html（）"></a>6.2 html内容操作  html（）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//获取一个html的所有元素</span><br><span class="line">   $(<span class="string">"#myDiv"</span>).html()</span><br><span class="line">   //是直接替换 不是追加</span><br><span class="line">   $(<span class="string">"#myDiv"</span>).html(<span class="string">"&lt;input name='username'/&gt;"</span>)</span><br></pre></td></tr></table></figure><h3 id="6-3-input内容操作-val（）"><a href="#6-3-input内容操作-val（）" class="headerlink" title="6.3 input内容操作  val（）"></a>6.3 input内容操作  val（）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//获取内容值</span><br><span class="line">$(<span class="string">"#username"</span>).val()</span><br><span class="line">//设置input中的内容为你好</span><br><span class="line">   $(<span class="string">"#username"</span>).val(<span class="string">"你好"</span>);</span><br></pre></td></tr></table></figure><h3 id="6-4-CSS内容操作-css（）"><a href="#6-4-CSS内容操作-css（）" class="headerlink" title="6.4 CSS内容操作  css（）"></a>6.4 CSS内容操作  css（）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//查询css内容 必须有属性</span><br><span class="line">$(<span class="string">"#myDiv"</span>).css(<span class="string">"width"</span>)</span><br><span class="line">//设置css内容 </span><br><span class="line">   $(<span class="string">"#myDiv"</span>).css(<span class="string">"width"</span>,<span class="string">"300px"</span>);</span><br></pre></td></tr></table></figure><h2 id="7-样式操作"><a href="#7-样式操作" class="headerlink" title="7. 样式操作"></a>7. 样式操作</h2><h3 id="7-1-类操作-class（）"><a href="#7-1-类操作-class（）" class="headerlink" title="7.1 类操作  class（）"></a>7.1 类操作  class（）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//添加class</span><br><span class="line">$(<span class="string">"#myDiv2"</span>).addClass(<span class="string">"div2"</span>);</span><br><span class="line">//移除class</span><br><span class="line">   $(<span class="string">"#myDiv2"</span>).removeClass();</span><br><span class="line">   //没有就加上，有就删掉</span><br><span class="line">   $(<span class="string">"#myDiv2"</span>).toggleClass(<span class="string">"div2"</span>);</span><br><span class="line">   //判断元素中是否含有某个 class, 如果有, 则返回 <span class="literal">true</span>; 否则返回 <span class="literal">false</span></span><br><span class="line">   $(<span class="string">"#myDiv2"</span>).hasClass(<span class="string">"div2"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;JQUREY学习文档&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-JQuery是什么&quot;&gt;&lt;a href=&quot;#1-JQuery是什么&quot; class=&quot;headerlink&quot; title=&quot;1. JQuery是什么&quot;&gt;&lt;/a&gt;1. JQuery是什么&lt;/h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hexo_fortest</title>
    <link href="http://yoursite.com/2020/06/23/hexo_fortest/"/>
    <id>http://yoursite.com/2020/06/23/hexo_fortest/</id>
    <published>2020-06-23T10:19:24.453Z</published>
    <updated>2020-06-23T10:19:31.648Z</updated>
    
    <content type="html"><![CDATA[<p>hexo默认主题是landscape，如果只是修改theme参数下的文件地址，给我出了这么个玩意</p><blockquote><p>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</p></blockquote><p>说一下解决办法<br>1、在hexo目录下打开git bash，输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://img-blog.csdnimg.cn/20200623171509235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2prczg4OTk1NjU2,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2、清除缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>3、生成静态文件，查看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>之后就可以在 </p><blockquote><p><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p></blockquote><p>本地地址 即可查看到 配置成功的主题网页</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hexo默认主题是landscape，如果只是修改theme参数下的文件地址，给我出了这么个玩意&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;extends includes/layout.pug block content include ./includes/mixins/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/06/23/hello-world/"/>
    <id>http://yoursite.com/2020/06/23/hello-world/</id>
    <published>2020-06-23T07:48:27.221Z</published>
    <updated>2020-06-23T07:48:27.221Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
